<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 1 -->
    <bean class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" id="securityManager">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="authenticator" ref="authenticator"/>
        <property name="realms">
            <list>
                <ref bean="casRealm"/>
                <!--<ref bean="shiroRealm"/>-->
                <!--<ref bean="shiroRealm2"/>-->
            </list>
        </property>
        <!--<property name="sessionManager" ref="sessionManager"/>-->
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <property name="subjectFactory" ref="casSubjectFactory"/>
    </bean>
    <!-- 2 -->
    <bean class="org.apache.shiro.cache.ehcache.EhCacheManager" id="cacheManager">
        <property name="cacheManagerConfigFile" value="classpath:spring/ehcache.xml"/>
    </bean>
    <!-- 3 -->
    <bean class="org.apache.shiro.authc.pam.ModularRealmAuthenticator" id="authenticator">
        <property name="authenticationStrategy"> <!-- 多realm认证策略 -->
            <bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"/>
        </property>
    </bean>
    <bean class="cn.liaohongdong.common.ShiroRealm" id="shiroRealm">
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5"/>
                <property name="hashIterations" value="1"/>
            </bean>
        </property>
    </bean>
    <bean class="cn.liaohongdong.common.ShiroRealm2" id="shiroRealm2">
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="SHA1"/>
                <property name="hashIterations" value="1"/>
            </bean>
        </property>
    </bean>
    <bean id="casRealm" class="cn.liaohongdong.common.SSOCasRealm">
        <property name="defaultRoles" value="ROLE_USER"/>
        <property name="casServerUrlPrefix" value="https://liaohongdong.cn/cas"/>
        <property name="casService" value="https://localhost:4433/casFilter"/>
    </bean>
    <bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory"/>
    <!-- 4 可以自动的来调用配置在spring IOC容器中 shiro bean 的生命周期方法 -->
    <bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor" id="lifecycleBeanPostProcessor"/>
    <!-- 5 启用ioc容器中使用shiro的注解 但是必须先配置 lifecycleBeanPostProcessor 之后才可以使用-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <!-- 启用shiro AOP注解 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <!-- 6 id 必须和web.xml文件中的DelegatingFilterProxy的filter-name一致 -->
    <bean class="org.apache.shiro.spring.web.ShiroFilterFactoryBean" id="shiroFilter">
        <property name="securityManager" ref="securityManager"/>
        <!--<property name="loginUrl" value="/admin/login"/>-->
        <property name="loginUrl" value="https://liaohongdong.cn/cas/login?service=https://localhost:4433/casFilter"/>
        <!--<property name="successUrl" value="https://localhost:4433/admin/list"/>-->
        <property name="unauthorizedUrl" value="/admin/unauthorized"/>
        <property name="filterChainDefinitionMap" ref="filterChainDefinitionMap"/>
        <property name="filters">
            <util:map>
                <entry key="casFilter" value-ref="casFilter"/>
                <!--<entry key="logout" value="/admin/logout"/>-->
            </util:map>
        </property>
    </bean>
    <!-- roles配置 -->
    <bean factory-bean="filterChainDefinitionMapBuilder"
          factory-method="build"
          id="filterChainDefinitionMap"/>
    <!-- 工厂bean -->
    <bean class="cn.liaohongdong.common.FilterChainDefinitionMapBuilder" id="filterChainDefinitionMapBuilder"/>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdUrlRewritingEnabled" value="false"/>
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="sessionIdCookieEnabled" value="true"/>
    </bean>
    <bean id="sessionValidationScheduler"
          class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <!-- 设置session的失效扫描间隔，单位为毫秒 -->
        <property name="sessionValidationInterval" value="100000"/>
        <!-- 随后还需要定义有一个会话管理器的程序类的引用 -->
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    <!-- 配置session的定时验证检测程序类，以让无效的session释放 -->
    <bean id="sessionDAO" class="cn.liaohongdong.common.MySessionDao">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    <bean id="sessionFactory" class="cn.liaohongdong.common.OnlineSessionFactory"/>

    <!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息 -->
    <!--<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">-->
    <!--<property name="cookie" ref="rememberMeCookie"/>-->
    <!--</bean>-->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
    <!-- 记住我cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- 记住我cookie生效时间30天  2592000  604800-->
        <constructor-arg value="liao-session"/>
        <property name="maxAge" value="2592000"/>
        <property name="httpOnly" value="true"/>
    </bean>
    <!-- 关闭浏览器还能继续访问 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/>
    </bean>
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="rememberMeParam" value="rememberMe"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
        <property name="successUrl" value="https://localhost:4433/admin/list"/>
        <property name="failureUrl" value="https://localhost:4433/admin/unauthorized"/>
    </bean>

    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <!-- 配置验证错误时的失败页面 -->
        <property name="redirectUrl" value="https://liaohongdong.cn/cas/login?service=https://localhost:4433/logoutFilter" />
    </bean>



</beans>